---
# Source: benchmark/templates/fortio.yaml

---
apiVersion: v1
kind: Service
metadata:
  name: fortioserver
spec:
  ports:
  - name: http-echo
    port: 8080
    protocol: TCP
  - name: grpc-ping
    port: 8079
    protocol: TCP
  - name: http-echoa
    port: 8077
    protocol: TCP
  - name: grpc-pinga
    port: 8076
    protocol: TCP
  selector:
    app: fortioserver
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: fortioserver
  name: fortioserver
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fortioserver
  template:
    metadata:
      annotations:
        sidecar.istio.io/interceptionMode: REDIRECT
        sidecar.istio.io/inject: "true"
        linkerd.io/inject: "disabled"
        # exclude inbound ports of the uncaptured container
        traffic.sidecar.istio.io/excludeInboundPorts: "8076,8077,8078"
        sidecar.istio.io/proxyCPU: 1000m
        sidecar.istio.io/proxyMemory: 512Mi
      labels:
        app: fortioserver
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - "fortioclient"
            topologyKey: "kubernetes.io/hostname"
      volumes:
      - name: shared-data
        emptyDir: {}
      containers:
      - name: captured
        securityContext:
          runAsUser: 1
        volumeMounts:
        - name: shared-data
          mountPath: /var/lib/fortio
        image: gcr.io/istio-testing/fortio:v1.3.1-1
        ports:
        - containerPort: 8080
          protocol: TCP
        - containerPort: 8079
          protocol: TCP
        resources:
          requests:
            cpu: 800m
            memory: 1000Mi
          
      - name: shell
        securityContext:
          runAsUser: 1
        volumeMounts:
        - name: shared-data
          mountPath: /var/lib/fortio
        image: tutum/curl:trusty
        args:
        - /bin/sleep
        - infinity
      - name: uncaptured
        securityContext:
          runAsUser: 1
        image: gcr.io/istio-testing/fortio:v1.3.1-1
        args:
        - server
        - -http-port
        - "8077"
        - -grpc-port
        - "8076"
        - -redirect-port
        - "8078"
        resources:
          requests:
            cpu: 800m
            memory: 1000Mi
          
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: fortioserver
spec:
  hosts:
  - fortioserver.local
  gateways:
  - fortio-gateway
  http:
  - route:
    - destination:
        host: fortioserver
        port:
          number: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: fortioclient
spec:
  ports:
  - name: http-echo
    port: 8080
    protocol: TCP
  - name: grpc-ping
    port: 8079
    protocol: TCP
  - name: http-echoa
    port: 8077
    protocol: TCP
  - name: grpc-pinga
    port: 8076
    protocol: TCP
  selector:
    app: fortioclient
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: fortioclient
  name: fortioclient
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fortioclient
  template:
    metadata:
      annotations:
        sidecar.istio.io/interceptionMode: REDIRECT
        traffic.sidecar.istio.io/excludeOutboundIPRanges: 10.4.0.0/16
        traffic.sidecar.istio.io/includeOutboundIPRanges: 10.8.0.0/16
        sidecar.istio.io/inject: "true"
        linkerd.io/inject: "disabled"
        # exclude inbound ports of the uncaptured container
        traffic.sidecar.istio.io/excludeInboundPorts: "8076,8077,8078"
        sidecar.istio.io/proxyCPU: 1000m
        sidecar.istio.io/proxyMemory: 512Mi
      labels:
        app: fortioclient
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - "fortioserver"
            topologyKey: "kubernetes.io/hostname"
      volumes:
      - name: shared-data
        emptyDir: {}
      containers:
      - name: captured
        securityContext:
          runAsUser: 1
        volumeMounts:
        - name: shared-data
          mountPath: /var/lib/fortio
        image: gcr.io/istio-testing/fortio:v1.3.1-1
        args:
        - report
        ports:
        - containerPort: 8080
          protocol: TCP
        - containerPort: 8079
          protocol: TCP
        resources:
          requests:
            cpu: 800m
            memory: 1000Mi
          
      - name: shell
        securityContext:
          runAsUser: 1
        volumeMounts:
        - name: shared-data
          mountPath: /var/lib/fortio
        image: tutum/curl:trusty
        args:
        - /bin/sleep
        - infinity
      - name: uncaptured
        securityContext:
          runAsUser: 1
        image: gcr.io/istio-testing/fortio:v1.3.1-1
        args:
        - report
        - -http-port
        - "8077"
        - -grpc-port
        - "8076"
        - -redirect-port
        - "8078"
        resources:
          requests:
            cpu: 800m
            memory: 1000Mi
          
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: fortioclient
spec:
  hosts:
  - fortioclient.local
  gateways:
  - fortio-gateway
  http:
  - route:
    - destination:
        host: fortioclient
        port:
          number: 8080

---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: fortio-gateway
spec:
  selector:
    istio: ingressgateway
  servers:
  - hosts:
    - fortioserver.local
    - fortioclient.local
    port:
      name: http
      number: 80
      protocol: HTTP
  - hosts:
    - '*'
    port:
      name: https-fortio
      number: 443
      protocol: HTTPS
    tls:
      mode: SIMPLE
      privateKey: /etc/istio/ingressgateway-certs/tls.key
      serverCertificate: /etc/istio/ingressgateway-certs/tls.crt
---

---
# Source: benchmark/templates/mtls.yaml
apiVersion: authentication.istio.io/v1alpha1
kind: Policy
metadata:
  name: "default"
  namespace: twopods-istio
spec:
  peers:
  - mtls:
      mode: PERMISSIVE
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: fortioserver
  namespace: twopods-istio
spec:
  host:  fortioserver
  trafficPolicy:
    portLevelSettings:
    - port:
        number: 8080
      tls:
        mode: ISTIO_MUTUAL
    - port:
        number: 8077
      tls:
        mode: DISABLE


